import React, { useEffect } from 'react'
import './App.css'

// Import context and components
import { AppProvider, useAppContext } from './context/AppContext'
import LiveHUD from './components/LiveHUD'
import MapView from './components/MapView'
import CameraView from './components/CameraView'
import StatusBar from './components/StatusBar'
import ControlBar from './components/ControlBar'

// Main App component (wrapped by context)
function AppContent() {
  const {
    state,
    tripRecorder,
    actions
  } = useAppContext();

  const { mode, isLoading } = state;
  const { currentTrip } = tripRecorder;

  // Expose actions globally for StatusBar error dismissal
  useEffect(() => {
    window.appActions = actions;
    return () => {
      delete window.appActions;
    };
  }, [actions]);

  return (
    <div className={`min-h-screen transition-colors duration-300 ${mode === 'camera' ? 'mode-camera' : 'mode-map'}`}>
      {/* Status Bar */}
      <StatusBar className="absolute top-0 left-0 right-0 z-50" />

      {/* Main Content Area */}
      <div className="flex-1 relative w-full h-screen">
        {mode === 'camera' ? (
          <>
            {/* Camera View */}
            <CameraView className="absolute inset-0" />
            
            {/* Live HUD Overlay */}
            <LiveHUD 
              visible={true}
              className="absolute inset-0 pointer-events-none"
            />
          </>
        ) : (
          <>
            {/* Map View */}
            <MapView className="absolute inset-0" />
          </>
        )}
      </div>

      {/* Control Bar */}
      <ControlBar className="absolute bottom-0 left-0 right-0 z-50" />

      {/* Loading Overlay */}
      {isLoading && (
        <div className="absolute inset-0 bg-black/50 flex items-center justify-center z-50">
          <div className="bg-black/80 text-white px-6 py-4 rounded-lg text-center">
            <div className="text-2xl mb-2">⏳</div>
            <div>Loading...</div>
          </div>
        </div>
      )}

      {/* Accessibility announcements */}
      <div className="sr-only" aria-live="polite" aria-atomic="true">
        {mode && `Switched to ${mode} mode`}
      </div>
    </div>
  );
}

// Main App component with Provider
function App() {
  return (
    <AppProvider>
      <AppContent />
    </AppProvider>
  );
}

export default App
