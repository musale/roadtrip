(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const l of a.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&t(l)}).observe(document,{childList:!0,subtree:!0});function i(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function t(s){if(s.ep)return;s.ep=!0;const a=i(s);fetch(s.href,a)}})();const N="RoadTripDB",W=1,P="trips",B="videoChunks";let E=null;function U(){return new Promise((d,e)=>{if(E){d(E);return}const i=indexedDB.open(N,W);i.onupgradeneeded=t=>{const s=t.target.result;s.objectStoreNames.contains(P)||s.createObjectStore(P,{keyPath:"id",autoIncrement:!0}),s.objectStoreNames.contains(B)||s.createObjectStore(B,{keyPath:"id",autoIncrement:!0})},i.onsuccess=t=>{E=t.target.result,d(E)},i.onerror=t=>{console.error("IndexedDB error:",t.target.errorCode),e(t.target.errorCode)}})}async function q(d){const e=await U();return new Promise((i,t)=>{const l=e.transaction([P],"readwrite").objectStore(P).add(d);l.onsuccess=()=>i(l.result),l.onerror=()=>t(l.error)})}async function j(){const d=await U();return new Promise((e,i)=>{const a=d.transaction([P],"readonly").objectStore(P).getAll();a.onsuccess=()=>e(a.result),a.onerror=()=>i(a.error)})}async function z(){const d=await U();return new Promise((e,i)=>{const a=d.transaction([B],"readwrite").objectStore(B).clear();a.onsuccess=()=>e(),a.onerror=()=>i(a.error)})}async function $(d,e){try{const s=await(await(await navigator.storage.getDirectory()).getFileHandle(d,{create:!0})).createWritable();return await s.write(e),await s.close(),console.log(`Successfully wrote ${d} to OPFS.`),!0}catch(i){return console.error("Error writing to OPFS:",i),!1}}async function O(d){try{return await(await(await navigator.storage.getDirectory()).getFileHandle(d)).getFile()}catch(e){return console.error("Error reading from OPFS:",e),null}}const G=6371;class X{constructor(){this.currentTrip=null,this.watchId=null,this.points=[],this.startTime=null,this.lastPointTime=null,this.distanceM=0,this.speedKph=0,this.headingDeg=0,this.movingTime=0,this.lastPosition=null,this.speedReadings=[],this.maxSpeedKph=0}startTrip(){if(this.watchId){console.warn("Trip already in progress.");return}this.currentTrip={id:Date.now(),startedAt:Date.now(),endedAt:null,points:[],stats:{distanceM:0,durationMs:0,avgKph:0,maxKph:0,movingTime:0}},this.points=[],this.startTime=Date.now(),this.lastPointTime=Date.now(),this.distanceM=0,this.speedKph=0,this.headingDeg=0,this.movingTime=0,this.lastPosition=null,this.speedReadings=[],this.maxSpeedKph=0;const e={enableHighAccuracy:!0,maximumAge:0,timeout:5e3};this.watchId=navigator.geolocation.watchPosition(this._handlePosition.bind(this),this._handlePositionError.bind(this),e),console.log("Trip started.")}async stopTrip(){if(!this.watchId){console.warn("No trip in progress.");return}navigator.geolocation.clearWatch(this.watchId),this.watchId=null,this.currentTrip.endedAt=Date.now(),this.currentTrip.points=this.points,this.currentTrip.stats.distanceM=this.distanceM,this.currentTrip.stats.durationMs=this.currentTrip.endedAt-this.startTime,this.currentTrip.stats.maxKph=this.maxSpeedKph,this.currentTrip.stats.movingTime=this.movingTime,this.currentTrip.stats.avgKph=this.distanceM>0?this.distanceM/1e3/(this.movingTime/(1e3*60*60)):0,await q(this.currentTrip),console.log("Trip stopped and saved:",this.currentTrip);const e={...this.currentTrip};return this.currentTrip=null,e}_handlePosition(e){const{latitude:i,longitude:t,accuracy:s,speed:a,heading:l,altitude:b}=e.coords,m=Date.now(),p={t:m,lat:i,lon:t,acc:s,alt:b};if(this.lastPosition){const{distance:x,bearing:g}=this._haversineDistance(this.lastPosition.lat,this.lastPosition.lon,i,t);this.distanceM+=x;const f=(m-this.lastPointTime)/1e3;if(f>0){const S=x/f;this.speedKph=S*3.6,this.speedReadings.push(this.speedKph),this.speedReadings.length>10&&this.speedReadings.shift(),p.v=this.speedKph,this.maxSpeedKph=Math.max(this.maxSpeedKph,this.speedKph),this.speedKph>1&&(this.movingTime+=m-this.lastPointTime)}this.headingDeg=l!==null?l:g,p.hdg=this.headingDeg}else p.v=0,p.hdg=0;this.points.push(p),this.lastPosition={lat:i,lon:t},this.lastPointTime=m}_handlePositionError(e){console.error("Geolocation error:",e)}_haversineDistance(e,i,t,s){const a=c=>c*Math.PI/180,l=G*1e3,b=a(t-e),m=a(s-i),p=a(e),x=a(t),g=Math.sin(b/2)*Math.sin(b/2)+Math.sin(m/2)*Math.sin(m/2)*Math.cos(p)*Math.cos(x),f=2*Math.atan2(Math.sqrt(g),Math.sqrt(1-g)),S=l*f,v=Math.sin(m)*Math.cos(x),M=Math.cos(p)*Math.sin(x)-Math.sin(p)*Math.cos(x)*Math.cos(m),w=(a(360)+Math.atan2(v,M))%a(360)*180/Math.PI;return{distance:S,bearing:w}}getCurrentTrip(){if(!this.currentTrip)return null;const e=Date.now()-this.startTime,i=this.distanceM>0?this.distanceM/1e3/(this.movingTime/(1e3*60*60)):0,t=this.speedReadings.length>0?this.speedReadings.reduce((s,a)=>s+a,0)/this.speedReadings.length:0;return{...this.currentTrip,points:this.points,stats:{distanceM:this.distanceM,durationMs:e,avgKph:i,maxKph:this.maxSpeedKph,movingTime:this.movingTime},live:{speedKph:t,headingDeg:this.headingDeg,elapsedMs:e}}}exportGPX(e){if(!e||!e.points||e.points.length===0)return null;let i='<gpx version="1.1" creator="RoadTrip" xmlns="http://www.topografix.com/GPX/1/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd">';return i+=`<trk><name>RoadTrip - ${new Date(e.startedAt).toLocaleString()}</name><trkseg>`,e.points.forEach(t=>{i+=`<trkpt lat="${t.lat}" lon="${t.lon}">`,i+=`<time>${new Date(t.t).toISOString()}</time>`,t.alt!==void 0&&(i+=`<ele>${t.alt}</ele>`),t.v!==void 0&&(i+=`<speed>${t.v/3.6}</speed>`),t.hdg!==void 0&&(i+=`<course>${t.hdg}</course>`),i+="</trkpt>"}),i+="</trkseg></trk></gpx>",new Blob([i],{type:"application/gpx+xml"})}exportGeoJSON(e){if(!e||!e.points||e.points.length===0)return null;const i={type:"FeatureCollection",features:[{type:"Feature",properties:{name:`RoadTrip - ${new Date(e.startedAt).toLocaleString()}`,startedAt:new Date(e.startedAt).toISOString(),endedAt:new Date(e.endedAt).toISOString(),distanceM:e.stats.distanceM,durationMs:e.stats.durationMs,avgKph:e.stats.avgKph,maxKph:e.stats.maxKph,movingTime:e.stats.movingTime},geometry:{type:"LineString",coordinates:e.points.map(t=>[t.lon,t.lat,t.alt||0])}},...e.points.map(t=>({type:"Feature",properties:{time:new Date(t.t).toISOString(),speedKph:t.v,headingDeg:t.hdg,accuracy:t.acc,altitude:t.alt},geometry:{type:"Point",coordinates:[t.lon,t.lat,t.alt||0]}}))]};return new Blob([JSON.stringify(i,null,2)],{type:"application/geo+json"})}}class J{constructor(){this.canvas=null,this.ctx=null,this.animationFrameId=null,this.hudAriaElement=document.getElementById("hud-aria"),this.speedKph=0,this.elapsedMs=0,this.distanceM=0,this.headingDeg=0,this.brandColor="#00F5D4",this.textColor="#E0E0E0",this.bgColor="rgba(13, 13, 13, 0.5)",this._readCssVariables(),window.matchMedia("(prefers-reduced-motion: reduce)").addEventListener("change",this._handleReducedMotionChange.bind(this)),this.prefersReducedMotion=window.matchMedia("(prefers-reduced-motion: reduce)").matches}_readCssVariables(){const e=getComputedStyle(document.documentElement);this.brandColor=e.getPropertyValue("--color-brand").trim()||this.brandColor,this.textColor=e.getPropertyValue("--color-text-primary").trim()||this.textColor,this.bgColor=e.getPropertyValue("--color-bg").trim()||this.bgColor}_handleReducedMotionChange(e){this.prefersReducedMotion=e.matches}attach(e){this.canvas=e,this.ctx=e.getContext("2d"),this._resizeCanvas(),window.addEventListener("resize",this._resizeCanvas.bind(this))}_resizeCanvas(){if(!this.canvas)return;const e=1280,i=720,t=window.devicePixelRatio||1;this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.width=e*t,this.canvas.height=i*t,this.ctx.scale(t,t),this.internalWidth=e,this.internalHeight=i}start(){if(!this.canvas||!this.ctx){console.error("HUD canvas not attached.");return}this.animationFrameId=requestAnimationFrame(this._draw.bind(this))}stop(){this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}update({speedKph:e,elapsedMs:i,distanceM:t,headingDeg:s}){this.speedKph=e!==void 0?e:this.speedKph,this.elapsedMs=i!==void 0?i:this.elapsedMs,this.distanceM=t!==void 0?t:this.distanceM,this.headingDeg=s!==void 0?s:this.headingDeg,this._mirrorToAria()}_mirrorToAria(){if(this.hudAriaElement){const e=this.speedKph.toFixed(1),i=(this.distanceM/1e3).toFixed(2),t=new Date(this.elapsedMs).toISOString().substr(11,8);this.hudAriaElement.textContent=`Speed: ${e} kilometers per hour, Distance: ${i} kilometers, Time: ${t}, Heading: ${this.headingDeg.toFixed(0)} degrees.`}}drawBackgroundFrame(e){!this.ctx||!e||(this.ctx.clearRect(0,0,this.internalWidth,this.internalHeight),this.ctx.drawImage(e,0,0,this.internalWidth,this.internalHeight))}_draw(){if(!this.ctx)return;this.ctx.save(),this.prefersReducedMotion||(this.ctx.shadowColor=this.brandColor,this.ctx.shadowBlur=15),this.ctx.fillStyle=this.brandColor,this.ctx.strokeStyle=this.brandColor,this.ctx.lineWidth=2,this.ctx.textBaseline="top",this.ctx.font="bold 80px monospace",this.ctx.textAlign="right",this.ctx.fillText(`${this.speedKph.toFixed(0)}`,Math.floor(this.internalWidth-40),Math.floor(100)),this.ctx.font="30px monospace",this.ctx.fillText("KPH",Math.floor(this.internalWidth-40),Math.floor(140)),this.ctx.font="bold 40px monospace",this.ctx.textAlign="left",this.ctx.fillText(`DIST: ${(this.distanceM/1e3).toFixed(2)}`,Math.floor(40),Math.floor(100)),this.ctx.font="25px monospace",this.ctx.fillText("KM",Math.floor(40),Math.floor(135));const e=new Date(this.elapsedMs).toISOString().substr(11,8);this.ctx.fillText(`TIME: ${e}`,Math.floor(40),Math.floor(150)),this.ctx.font="bold 40px monospace",this.ctx.textAlign="center",this.ctx.fillText(`HDG: ${this.headingDeg.toFixed(0)}°`,Math.floor(this.internalWidth/2),Math.floor(80)),this.ctx.beginPath(),this.ctx.arc(Math.floor(this.internalWidth/2),Math.floor(150),30,0,Math.PI*2),this.ctx.stroke(),this.ctx.beginPath();const i=(this.headingDeg-90)*Math.PI/180,t=25,s=Math.floor(this.internalWidth/2),a=Math.floor(150);this.ctx.moveTo(s,a),this.ctx.lineTo(s+t*Math.cos(i),a+t*Math.sin(i)),this.ctx.stroke(),this.ctx.restore(),this.animationFrameId=requestAnimationFrame(this._draw.bind(this))}}const I=1280,A=720,Y=30,Z=1e3;class Q{constructor(e){this.hudCanvas=e,this.hudCtx=e.getContext("2d"),this.cameraFeed=document.getElementById("cameraFeed"),this.mediaRecorder=null,this.recordedBlobs=[],this.stream=null,this.audioTrack=null,this.videoTracks=[],this.recordingInterval=null,this.isDualCamera=!1,this.facingMode="environment",this.lowPowerMode=!1,this.lastFrameTime=0,this.frameCount=0,this.fpsCheckInterval=null}async listCameras(){return(await navigator.mediaDevices.enumerateDevices()).filter(i=>i.kind==="videoinput")}async getStreamByDeviceId(e,{audio:i=!0}={}){const t={video:{deviceId:e?{exact:e}:void 0,width:I,height:A},audio:i?{echoCancellation:!0,noiseSuppression:!0}:!1};return navigator.mediaDevices.getUserMedia(t)}async startSingle({facing:e="environment"}){this.facingMode=e;const i={video:{facingMode:e,width:I,height:A},audio:{echoCancellation:!0,noiseSuppression:!0}};try{return this.stream=await navigator.mediaDevices.getUserMedia(i),this.cameraFeed.srcObject=this.stream,this.videoTracks=this.stream.getVideoTracks(),this.audioTrack=this.stream.getAudioTracks()[0],this.isDualCamera=!1,this._startFpsCheck(),!0}catch(t){return console.error("Error starting single camera stream:",t),!1}}async startDual(){let e=null,i=null;try{if(e=await navigator.mediaDevices.getUserMedia({video:{facingMode:"environment",width:I,height:A},audio:{echoCancellation:!0,noiseSuppression:!0}}),this.audioTrack=e.getAudioTracks()[0],i=await navigator.mediaDevices.getUserMedia({video:{facingMode:"user",width:I/2,height:A/2},audio:!1}),e&&i)return this.stream=new MediaStream,e.getVideoTracks().forEach(t=>this.stream.addTrack(t)),i.getVideoTracks().forEach(t=>this.stream.addTrack(t)),this.stream.addTrack(this.audioTrack),this.cameraFeed.srcObject=this.stream,this.videoTracks=this.stream.getVideoTracks(),this.isDualCamera=!0,this._startFpsCheck(),!0}catch(t){return console.warn("Could not start dual camera, falling back to single:",t),e&&e.getTracks().forEach(s=>s.stop()),i&&i.getTracks().forEach(s=>s.stop()),this.startSingle({facing:this.facingMode})}return!1}stopCamera(){this.stream&&(this.stream.getTracks().forEach(e=>e.stop()),this.stream=null,this.cameraFeed.srcObject=null,this.videoTracks=[],this.audioTrack=null,this.isDualCamera=!1,this._stopFpsCheck())}_startFpsCheck(){this.lastFrameTime=performance.now(),this.frameCount=0,this.fpsCheckInterval=setInterval(()=>{const e=performance.now(),i=e-this.lastFrameTime,t=this.frameCount/i*1e3;t<24&&!this.lowPowerMode?(this.lowPowerMode=!0,console.warn("Entering low power mode due to low FPS.")):t>=24&&this.lowPowerMode&&(this.lowPowerMode=!1,console.log("Exiting low power mode.")),this.frameCount=0,this.lastFrameTime=e},5e3)}_stopFpsCheck(){this.fpsCheckInterval&&(clearInterval(this.fpsCheckInterval),this.fpsCheckInterval=null,this.lowPowerMode=!1)}_getMimeType(){const e=['video/webm; codecs="vp9"','video/mp4; codecs="avc1.42001E"','video/webm; codecs="vp8"'];for(const i of e)if(MediaRecorder.isTypeSupported(i))return i;return console.warn("No supported MIME type found for MediaRecorder."),null}startRecording(e){if(!this.stream)return console.error("No stream available for recording."),!1;const i=this._getMimeType();if(!i)return!1;const t=this.hudCanvas.captureStream(Y),s=new MediaStream;return t.getVideoTracks().forEach(a=>s.addTrack(a)),this.audioTrack&&s.addTrack(this.audioTrack),this.mediaRecorder=new MediaRecorder(s,{mimeType:i}),this.recordedBlobs=[],this.mediaRecorder.ondataavailable=a=>{a.data&&a.data.size>0?(this.recordedBlobs.push(a.data),console.log(`Video chunk available: ${a.data.size} bytes`),e(a.data)):console.warn("ondataavailable event fired with no data.")},this.mediaRecorder.onstop=()=>{console.log("MediaRecorder stopped. Final recorded blobs count:",this.recordedBlobs.length)},this.mediaRecorder.onerror=a=>{console.error("MediaRecorder error:",a.error)},this.mediaRecorder.start(Z),console.log("MediaRecorder started with MIME type:",i,"State:",this.mediaRecorder.state),!0}async stopRecording(){if(this.mediaRecorder&&this.mediaRecorder.state!=="inactive")if(console.log("Stopping MediaRecorder. Current state:",this.mediaRecorder.state),this.mediaRecorder.stop(),await new Promise(e=>this.mediaRecorder.addEventListener("stop",e,{once:!0})),console.log("Recording stopped. Total chunks collected:",this.recordedBlobs.length),this.recordedBlobs.length>0){const e=new Blob(this.recordedBlobs,{type:this.recordedBlobs[0].type});return this.recordedBlobs=[],e}else return console.warn("No video blobs were recorded."),null;return console.warn("MediaRecorder not active or not initialized."),null}drawCameraFeedToCanvas(){if(!(!this.hudCtx||!this.cameraFeed||!this.cameraFeed.srcObject)&&(this.hudCtx.clearRect(0,0,this.hudCanvas.width,this.hudCanvas.height),this.hudCtx.drawImage(this.cameraFeed,0,0,this.hudCanvas.width,this.hudCanvas.height),this.isDualCamera&&this.videoTracks.length>1)){const e=this.hudCanvas.width*(this.lowPowerMode?.2:.3),i=this.hudCanvas.height*(this.lowPowerMode?.2:.3),t=20;this.hudCtx.save(),this.hudCtx.strokeStyle="var(--color-brand)",this.hudCtx.lineWidth=5;const s=this.hudCanvas.width-e-t,a=this.hudCanvas.height-i-t;this.hudCtx.strokeRect(s,a,e,i),this.hudCtx.fillStyle="rgba(0, 0, 0, 0.5)",this.hudCtx.fillRect(s,a,e,i),this.hudCtx.fillStyle="white",this.hudCtx.font="20px Arial",this.hudCtx.textAlign="center",this.hudCtx.fillText("PiP",s+e/2,a+i/2),this.hudCtx.restore()}}}class ee{constructor({container:e,useMapLibre:i=!0,initialCenter:t=[0,0],initialZoom:s=2}){this.container=e,this.useMapLibre=i,this.initialCenter=t,this.initialZoom=s,this.map=null,this.canvasFallback=null,this.ctx=null,this.liveTrackSourceId="liveTrack",this.currentPointSourceId="currentPoint",this.follow=!1,this.currentPoints=[],this.currentMapCenter=t}init(){this.useMapLibre&&typeof maplibregl<"u"?this._initMapLibre():(console.warn("MapLibre GL not available or disabled, falling back to canvas."),this._initCanvasFallback())}_initMapLibre(){this.map=new maplibregl.Map({container:this.container,style:"https://demotiles.maplibre.org/style.json",center:this.initialCenter,zoom:this.initialZoom}),this.map.on("load",()=>{this.map.addSource(this.liveTrackSourceId,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.addLayer({id:"trackLine",type:"line",source:this.liveTrackSourceId,layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#00F5D4","line-width":5}}),this.map.addSource(this.currentPointSourceId,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.addLayer({id:"currentPoint",type:"circle",source:this.currentPointSourceId,paint:{"circle-radius":8,"circle-color":"#FF1B9B","circle-stroke-color":"#FFFFFF","circle-stroke-width":2}}),this.map.on("error",e=>{e.error&&e.error.message.includes("Failed to load style")&&(console.error("MapLibre GL style/tile loading error, switching to canvas fallback:",e.error),this.destroy(),this._initCanvasFallback())})}),this.map.on("move",()=>{this.follow||(this.currentMapCenter=this.map.getCenter().toArray())})}_initCanvasFallback(){this.canvasFallback=document.createElement("canvas"),this.canvasFallback.id="mapCanvasFallback",this.canvasFallback.style.width="100%",this.canvasFallback.style.height="100%",this.container.appendChild(this.canvasFallback),this.ctx=this.canvasFallback.getContext("2d"),this._resizeCanvasFallback(),window.addEventListener("resize",this._resizeCanvasFallback.bind(this)),this._drawCanvasTrack()}_resizeCanvasFallback(){if(!this.canvasFallback)return;const e=window.devicePixelRatio||1;this.canvasFallback.width=this.container.clientWidth*e,this.canvasFallback.height=this.container.clientHeight*e,this.ctx.scale(e,e),this._drawCanvasTrack()}_drawCanvasTrack(){if(!this.ctx||this.currentPoints.length<2)return;this.ctx.clearRect(0,0,this.canvasFallback.width,this.canvasFallback.height);const e=Math.min(...this.currentPoints.map(c=>c.lon)),i=Math.max(...this.currentPoints.map(c=>c.lon)),t=Math.min(...this.currentPoints.map(c=>c.lat)),s=Math.max(...this.currentPoints.map(c=>c.lat)),a=i-e,l=s-t,b=.1,m=this.canvasFallback.width/(window.devicePixelRatio||1)*(1-2*b),p=this.canvasFallback.height/(window.devicePixelRatio||1)*(1-2*b),x=m/(a||1),g=p/(l||1),f=this.canvasFallback.width/(window.devicePixelRatio||1)*b-e*x,S=this.canvasFallback.height/(window.devicePixelRatio||1)*b+s*g,v=(c,T)=>({x:c*x+f,y:-T*g+S});this.ctx.beginPath(),this.ctx.strokeStyle="#00F5D4",this.ctx.lineWidth=3;const M=v(this.currentPoints[0].lon,this.currentPoints[0].lat);this.ctx.moveTo(M.x,M.y);for(let c=1;c<this.currentPoints.length;c++){const T=this.currentPoints[c],C=v(T.lon,T.lat);this.ctx.lineTo(C.x,C.y)}this.ctx.stroke();const y=this.currentPoints[this.currentPoints.length-1],w=v(y.lon,y.lat);this.ctx.beginPath(),this.ctx.arc(w.x,w.y,5,0,Math.PI*2),this.ctx.fillStyle="#FF1B9B",this.ctx.fill(),this.ctx.strokeStyle="#FFFFFF",this.ctx.lineWidth=1,this.ctx.stroke()}setFollow(e){this.follow=e}updateLiveTrack(e){if(this.currentPoints=e,this.map){const i={type:"Feature",geometry:{type:"LineString",coordinates:e.map(t=>[t.lon,t.lat])}};if(this.map.getSource(this.liveTrackSourceId).setData(i),this.follow&&e.length>0){const t=e[e.length-1];this.map.setCenter([t.lon,t.lat])}}else this.canvasFallback&&this._drawCanvasTrack()}setCurrentPoint(e){if(this.map){const i={type:"Feature",geometry:{type:"Point",coordinates:[e.lon,e.lat]}};this.map.getSource(this.currentPointSourceId).setData(i)}else this.canvasFallback}fitBoundsToPoints(e){if(!(!e||e.length<2))if(this.map){const i=new maplibregl.LngLatBounds;e.forEach(t=>i.extend([t.lon,t.lat])),this.map.fitBounds(i,{padding:50,maxZoom:15})}else this.canvasFallback&&this._drawCanvasTrack()}destroy(){this.map&&(this.map.remove(),this.map=null),this.canvasFallback&&(this.canvasFallback.remove(),this.canvasFallback=null,window.removeEventListener("resize",this._resizeCanvasFallback.bind(this)))}}document.addEventListener("DOMContentLoaded",async()=>{const d=document.getElementById("modeToggle"),e=document.getElementById("captureToggle"),i=document.getElementById("facingToggle"),t=document.getElementById("startButton"),s=document.getElementById("stopButton"),a=document.getElementById("cameraFeed"),l=document.getElementById("mapContainer"),b=document.getElementById("hudCanvas");document.getElementById("hud-aria");const m=document.getElementById("storageMeter"),p=document.getElementById("tripList"),x=document.querySelector("main"),g=document.createElement("div");g.id="videoPlayerOverlay",g.className="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 hidden",g.innerHTML=`
    <div class="relative bg-surface p-4 rounded-DEFAULT shadow-neon">
      <button id="closeVideoPlayer" class="absolute top-2 right-2 text-brand text-xl font-bold">X</button>
      <video id="replayVideoPlayer" controls class="w-[80vw] h-[80vh] max-w-4xl max-h-2xl"></video>
    </div>
  `,x.appendChild(g);const f=document.getElementById("replayVideoPlayer");document.getElementById("closeVideoPlayer").addEventListener("click",()=>{f.pause(),f.src="",g.classList.add("hidden")});const v=new X,M=new J,y=new Q(b),w=new ee({container:l});M.attach(b);let c="camera",T="single",C="environment",F=!1,L=null;const k=()=>{d.textContent=`Mode: ${c.charAt(0).toUpperCase()+c.slice(1)}`,e.textContent=`Capture: ${T.charAt(0).toUpperCase()+T.slice(1)}`,i.textContent=`Facing: ${C.charAt(0).toUpperCase()+C.slice(1)}`,c==="camera"?(a.classList.remove("hidden"),l.classList.add("hidden")):(a.classList.add("hidden"),l.classList.remove("hidden")),F?(t.classList.add("hidden"),s.classList.remove("hidden")):(t.classList.remove("hidden"),s.classList.add("hidden"))},R=async()=>{let n=!1;return T==="dual"?(n=await y.startDual(),n||(console.warn("Dual camera failed, falling back to single."),T="single",k(),n=await y.startSingle({facing:C}))):n=await y.startSingle({facing:C}),n&&(a.srcObject=y.stream,a.play()),n},_=()=>{y.stopCamera(),a.srcObject=null},V=async()=>{if(F)return;F=!0,k();try{L=await navigator.wakeLock.request("screen"),console.log("Screen Wake Lock acquired!")}catch(o){console.error(`${o.name}, ${o.message}`)}v.startTrip(),M.start(),c==="map"&&(w.init(),w.setFollow(!0)),y.startRecording(async o=>{const r=`video-chunk-${Date.now()}.webm`;await $(r,o)});const n=()=>{const o=v.getCurrentTrip();o&&(M.update({speedKph:o.live.speedKph,elapsedMs:o.live.elapsedMs,distanceM:o.stats.distanceM,headingDeg:o.live.headingDeg}),c==="map"&&(w.updateLiveTrack(o.points),w.setCurrentPoint(o.points[o.points.length-1]))),y.drawCameraFeedToCanvas(),M._draw(),F&&requestAnimationFrame(n)};requestAnimationFrame(n)},H=async()=>{if(!F)return;if(F=!1,k(),L&&(L.release(),L=null,console.log("Screen Wake Lock released.")),M.stop(),c==="map"){w.setFollow(!1);const o=v.getCurrentTrip();o&&o.points.length>0&&w.fitBoundsToPoints(o.points)}const n=await y.stopRecording();if(n){console.log("Final video blob created, size:",n.size,"type:",n.type);const o=`roadtrip-${Date.now()}.webm`;try{await $(o,n),console.log("Final video successfully saved to OPFS:",o);const r=await v.stopTrip();r&&(r.videoFilename=o,D(r)),await z()}catch(r){console.error("Error saving final video to OPFS:",r)}}else{console.warn("No final video blob to save.");const o=await v.stopTrip();o&&D(o)}};d.addEventListener("click",async()=>{c=c==="camera"?"map":"camera",k(),c==="camera"?(w.destroy(),await R()):(_(),w.init())}),e.addEventListener("click",async()=>{T=T==="single"?"dual":"single",k(),F&&(_(),await R())}),i.addEventListener("click",async()=>{C=C==="environment"?"user":"environment",k(),F&&(_(),await R())}),t.addEventListener("click",V),s.addEventListener("click",H),k();const K=async()=>{if(navigator.storage&&navigator.storage.estimate){const{usage:n,quota:o}=await navigator.storage.estimate(),r=n/o*100,h=(o-n)/(1024*1024*1024);m.textContent=`Storage: ${h.toFixed(2)} GB free (${r.toFixed(2)}% used)`}else m.textContent="Storage: Not supported"};K(),setInterval(K,3e4),(async()=>{const o=(await j()).find(r=>!r.endedAt);o&&confirm("It looks like you have an unsaved trip. Do you want to recover it?")&&(console.log("Recovering trip:",o),o.endedAt=Date.now(),D(o))})();const D=n=>{const o=document.createElement("li");o.className="flex justify-between items-center p-2 bg-surface rounded-DEFAULT mb-2",o.innerHTML=`
      <span>${new Date(n.startedAt).toLocaleString()} - ${(n.stats.distanceM/1e3).toFixed(2)} km</span>
      <div>
        ${n.videoFilename?'<button class="replay-video px-3 py-1 bg-accent text-bg rounded-DEFAULT text-sm mr-2">Replay Video</button>':""}
        ${n.videoFilename?'<button class="download-video px-3 py-1 bg-accent text-bg rounded-DEFAULT text-sm mr-2">Download Video</button>':""}
        ${n.videoFilename&&navigator.share?'<button class="share-video px-3 py-1 bg-accent text-bg rounded-DEFAULT text-sm mr-2">Share Video</button>':""}
        <button class="export-gpx px-3 py-1 bg-brand text-bg rounded-DEFAULT text-sm mr-2">GPX</button>
        <button class="export-geojson px-3 py-1 bg-brand text-bg rounded-DEFAULT text-sm">GeoJSON</button>
      </div>
    `,p.prepend(o),n.videoFilename&&(o.querySelector(".replay-video").addEventListener("click",async()=>{console.log("Attempting to replay video:",n.videoFilename);const r=await O(n.videoFilename);if(r){const h=URL.createObjectURL(r);f.src=h,g.classList.remove("hidden"),f.play(),f.addEventListener("ended",()=>{URL.revokeObjectURL(h),f.src=""},{once:!0})}else alert("Could not retrieve video.")}),o.querySelector(".download-video").addEventListener("click",async()=>{console.log("Attempting to download video:",n.videoFilename);const r=await O(n.videoFilename);if(r){const h=URL.createObjectURL(r),u=document.createElement("a");u.href=h,u.download=n.videoFilename,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(h)}else alert("Could not retrieve video for download.")}),navigator.share&&o.querySelector(".share-video").addEventListener("click",async()=>{console.log("Attempting to share video:",n.videoFilename);const r=await O(n.videoFilename);if(r)try{const h=new File([r],n.videoFilename,{type:r.type});await navigator.share({files:[h],title:`RoadTrip - ${new Date(n.startedAt).toLocaleString()}`,text:`Check out my RoadTrip video from ${new Date(n.startedAt).toLocaleString()}!`})}catch(h){console.error("Error sharing video:",h),alert("Failed to share video. "+(h.message||""))}else alert("Could not retrieve video for sharing.")})),o.querySelector(".export-gpx").addEventListener("click",()=>{const r=v.exportGPX(n);if(r){const h=URL.createObjectURL(r),u=document.createElement("a");u.href=h,u.download=`roadtrip-${n.id}.gpx`,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(h)}}),o.querySelector(".export-geojson").addEventListener("click",()=>{const r=v.exportGeoJSON(n);if(r){const h=URL.createObjectURL(r),u=document.createElement("a");u.href=h,u.download=`roadtrip-${n.id}.geojson`,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(h)}})};(async()=>{const n=await j();p.innerHTML="",n.sort((o,r)=>r.startedAt-o.startedAt).slice(0,2).forEach(D)})(),await R()});
